#!/usr/bin/env bash

set -eu

source "${JUST_SOURCE_DIR}/wrap"

if [ "${ALREADY_RUN_ONCE+set}" != "set" ]; then
  # create the user and associated groups and handle nfs symlinks
  source "${VSI_COMMON_DIR}/linux/elements.bsh"
  join_a venvs /venv/*
  JUST_DOCKER_ENTRYPOINT_INTERNAL_DIRS="${venvs}" \
  /usr/bin/env bash /vsi/linux/docker_entrypoint.bsh

  # Rerun entrypoint as user now, (skipping the root part via ALREADY_RUN_ONCE)
  ALREADY_RUN_ONCE=1 exec gosu ${DOCKER_USERNAME} /usr/bin/env bash $0 ${@+"${@}"}
fi

function sudo()
{
  gosu root ${@+"${@}"}
}
export -f sudo

source "${VSI_COMMON_DIR}/linux/docker_functions.bsh"
# Remove duplicate JUST_*_DOCKER variables
filter_docker_variables


if [ "$1" == "linux" ]; then
  if [ ! -s "${JUST_SOURCE_DIR}/Pipfile.lock" ]; then
    pipenv lock
  fi
  cd "${JUST_SOURCE_DIR}"
  pyinstaller just.spec
elif [ "$1" == "nopipenv" ]; then
  shift 1
  exec "${@}"
else
  if [ ! -s "${JUST_SOURCE_DIR}/Pipfile.lock" ]; then
    pipenv lock
  fi
  exec pipenv run "${@}"
fi
